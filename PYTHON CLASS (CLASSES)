# INHERITANCE
class Pet:
    def __init__(self, name, age):
        self.name = name
        self.age = age
        
    def show(self):
        print(f"I am {self.name} and I am {self.age} years old")
       
    def speak(self):
        print("I don t know what I say")
        
class Cat(Pet):
    def __init__(self, name, age, color):
        super().__init__(name, age)
        self.color = color
    
    def speak(self):
        print("Meow")
    
    def show(self):
        print(f"I am {self.name} and I am {self.age} years old and I am {self.color}")
        
        
class Dog(Pet):
    def speak(self):
        print("Bark")


p = Pet("Tim", 19)
p.speak()
p1 = Pet("Bil", 20)
c = Cat("Bill", 34, "Brown")
c.show()
d = Dog("Jill", 25)
d.speak()

# CLASS ATTRIBUTES
class Person:
    number_of_people = 0
    # a constant such as gravity
    # helpful if you move class to another file
    # rather than keeping it in the global 
    
    def __init__(self, name):
        self.name = name
        Person.add_person()
    
    @classmethod
    def number_of_people_(cls):
        return cls.number_of_people
      
    @classmethod
    def add_person(cls):
        cls.number_of_people += 1
        
p1 = Person("tim")
print(Person.number_of_people)
p2 = Person("bill")
print(Person.number_of_people)
print(Person.number_of_people_())

# print(Person.number_of_people)
# Person.number_of_people = 8
# print(Person.number_of_people)

# print(p1.number_of_people)
# Person.number_of_people = 9
# print(p2.number_of_people)
